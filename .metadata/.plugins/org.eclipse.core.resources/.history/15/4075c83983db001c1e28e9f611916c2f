package io.javabrains.springbootstarter.course;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class TopicService {

	@Autowired
	private TopicRepository topicRepository;
	
	
//	private List<Topic> topics = new ArrayList<>(Arrays.asList(
//			new Topic("spring", "Spring Framework", "Spring Framework Description"),
//			new Topic("java", "Core Java", "Core Java Description"),
//			new Topic("javascript", "Javascript", "Javascript Description")
//			));
	
	public List<Course> getAllTopics(){
		// return topics;
		List<Course> topics = new ArrayList<>();
		topicRepository.findAll()
		.forEach(topics::add);
		return topics;
	}
	
	public Course getTopic(String id) {
		// return topicRepository.findById(id);
		Course t = topicRepository.findById(id).get();
		  return t;
		// return topics.stream().filter(t -> t.getId().equals(id)).findFirst().get();
	}
	
	public void addTopic(Course topic) {
		topicRepository.save(topic);
		// topics.add(topic);
	}

	
	public void updateTopic(String id, Course topic) {
		topicRepository.save(topic);
//		for (int i=0; i<topics.size(); i++) {
//			Topic t = topics.get(i);
//			if (t.getId().equals(id)) {
//				topics.set(i, topic);
//				return;
//			}
		}
		

	public void deleteTopic(String id) {
		topicRepository.deleteById(id);
		// topics.removeIf(t -> t.getId().equals(id));
	}

	
}
